# -*- coding: utf-8 -*-
"""Support Vector Machines_v2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e8b0YRZ5dh8BaHOK-BHfNT24Sd8NvYcG
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import LinearSVC, SVC
from matplotlib import pyplot as plt
from sklearn.preprocessing import LabelEncoder

# Importing the dataset

data = pd.read_csv("apples_and_oranges.csv")

# Splitting the dataset into training and test samples
training_set, test_set = train_test_split(data, test_size = 0.2, random_state = 1)

# Classifying the predictors and target

X_train = training_set.iloc[:,0:2].values
Y_train = training_set.iloc[:,2].values
X_test = test_set.iloc[:,0:2].values
Y_test = test_set.iloc[:,2].values

le = LabelEncoder()
Y_train = le.fit_transform(Y_train)
Y_test = le.fit_transform(Y_test)

plt.scatter(X_train[:, 0], X_train[:, 1],
            c=Y_train, cmap='winter')
plt.show()

plt.scatter(X_test[:, 0], X_test[:, 1], c=Y_test, cmap='winter')
plt.show()

# Initializing Support Vector Machine and fitting the training data

classifier = LinearSVC(random_state = 1)
classifier.fit(X_train,Y_train)

# Predicting the classes for test set

Y_pred = classifier.predict(X_test)

classifier.score(X_test, Y_test)

plt.scatter(X_test[:, 0], X_test[:, 1], c=Y_pred, cmap='winter')
plt.show()

classifier = SVC(kernel='rbf', random_state = 1)
classifier.fit(X_train,Y_train)

classifier.score(X_test, Y_test)

Y_pred = classifier.predict(X_test)

plt.scatter(X_test[:, 0], X_test[:, 1], c=Y_pred, cmap='winter')
plt.show()
